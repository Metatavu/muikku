<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>muikku</artifactId>
  <packaging>war</packaging>
  <name>Muikku</name>
  <description>Muikku Learning Environment</description>

  <parent>
    <groupId>fi.muikku</groupId>
    <artifactId>parent</artifactId>
    <version>1.0.15-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <dependencies>

    <!-- Servlet -->

    <dependency>
      <groupId>org.jboss.spec.javax.servlet</groupId>
      <artifactId>jboss-servlet-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- CDI -->

    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.interceptor</groupId>
      <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- EJB -->

    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Transactions -->

    <dependency>
      <groupId>org.jboss.spec.javax.transaction</groupId>
      <artifactId>jboss-transaction-api_1.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- EL -->

    <dependency>
      <groupId>org.jboss.spec.javax.el</groupId>
      <artifactId>jboss-el-api_3.0_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Faces -->

    <dependency>
      <groupId>org.jboss.spec.javax.faces</groupId>
      <artifactId>jboss-jsf-api_2.2_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.faces</groupId>
      <artifactId>jsf-impl</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- Rewrite -->
    
    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-servlet</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-integration-faces</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-integration-cdi</artifactId>
    </dependency>

    <!-- Hibernate -->

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-infinispan</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Jackson -->

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Commons -->
    
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <!-- H2 -->
  
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>provided</scope>
    </dependency>
    
     <!-- RESTEasy -->
     
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>jaxrs-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson2-provider</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Muikku -->

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>core</artifactId>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>plugin</artifactId>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>rest</artifactId>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>persistence</artifactId>
    </dependency>


    <!-- ENABLED PLUGINS START -->

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>core-plugins</artifactId>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>h2db-plugin</artifactId>
      <version>1.0.15-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>school-data-pyramus</artifactId>
      <version>1.0.15-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>deus-nex-machina</artifactId>
      <version>1.0.15-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>dummy-mail-bridge-plugin</artifactId>
      <version>1.0.15-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>google-oauth-plugin</artifactId>
      <version>1.0.15-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>pyramus-oauth-plugin</artifactId>
      <version>1.0.15-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>facebook-oauth-plugin</artifactId>
      <version>1.0.15-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>mongo-log-plugin</artifactId>
      <version>1.0.15-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>fi.muikku</groupId>
      <artifactId>google-calendar-plugin</artifactId>
      <version>1.0.15-SNAPSHOT</version>
    </dependency>

    <!-- ENABLED PLUGINS END -->
    <dependency>
      <groupId>fi.otavanopisto</groupId>
      <artifactId>webapp-permission</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jasig.maven</groupId>
                    <artifactId>sass-maven-plugin</artifactId>
                    <versionRange>[1.1.1,)</versionRange>
                    <goals>
                      <goal>update-stylesheets</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.jasig.maven</groupId>
        <artifactId>sass-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>sassProcessSource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>update-stylesheets</goal>
            </goals>
            <inherited>false</inherited>
            <configuration>
              <sassSourceDirectory>${basedir}/src/main/webapp/resources/theme-muikku/sass</sassSourceDirectory>
              <destination>${project.build.directory}/${project.build.finalName}/resources/theme-muikku/css</destination>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <manifestEntries>
              <Dependencies>org.apache.commons.io, org.apache.commons.collections, org.apache.commons.codec, org.codehaus.jackson.jackson-core-asl, org.codehaus.jackson.jackson-mapper-asl, org.apache.httpcomponents, com.h2database.h2, org.jboss.resteasy.resteasy-jackson2-provider</Dependencies>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>fart-it</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <h2.version>1.4.177</h2.version>
        <it.port.http>8080</it.port.http>
        <it.port.https>8443</it.port.https>
        <it.host>dev.muikku.fi</it.host>
        <it.jdbc.driver>org.h2.Driver</it.jdbc.driver>
        <it.jdbc.url>jdbc:h2:file:${project.build.directory}${file.separator}h2;AUTO_SERVER=TRUE</it.jdbc.url>
        <it.jdbc.jndi>java:/jdbc/muikku</it.jdbc.jndi>
        <it.jdbc.username>sa</it.jdbc.username>
        <it.jdbc.password>sa</it.jdbc.password>
        <it.hibernate.dialect>org.hibernate.dialect.H2Dialect</it.hibernate.dialect>
        <it.keystore.alias>pyrit</it.keystore.alias>
        <it.keystore.pass>storepass</it.keystore.pass>
        <it.keystore.file>${project.build.directory}${file.separator}pyrit.keystore</it.keystore.file>
        <it.wiremock.port>8089</it.wiremock.port>
        <it.report.directory>${project.build.directory}${file.separator}failsafe-reports${file.separator}</it.report.directory>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
          <version>${h2.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.14.1</version>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.16</version>
            <configuration>
              <dependenciesToScan>
                <dependency>fi.muikku:core-plugins</dependency>
              </dependenciesToScan>
              <includes>
                <include>**/*IT.java</include>
              </includes>
              <systemPropertyVariables>
                <it.project.version>${project.version}</it.project.version>
                <it.host>${it.host}</it.host>
                <it.port.http>${it.port.http}</it.port.http>
                <it.port.https>${it.port.https}</it.port.https>
                <it.jdbc.driver>${it.jdbc.driver}</it.jdbc.driver>
                <it.jdbc.url>${it.jdbc.url}</it.jdbc.url>
                <it.jdbc.jndi>${it.jdbc.jndi}</it.jdbc.jndi>
                <it.jdbc.username>${it.jdbc.username}</it.jdbc.username>
                <it.jdbc.password>${it.jdbc.password}</it.jdbc.password>
                <!-- <it.keystore.file>${it.keystore.file}</it.keystore.file> <it.keystore.alias>${it.keystore.alias}</it.keystore.alias> 
                  <it.keystore.storepass>${it.keystore.pass}</it.keystore.storepass> -->
                <it.wiremock.port>${it.wiremock.port}</it.wiremock.port>
                <it.report.directory>${it.report.directory}</it.report.directory>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>keytool-maven-plugin</artifactId>
            <version>1.5</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <id>keyclean</id>
                <goals>
                  <goal>clean</goal>
                </goals>
                <configuration>
                  <keystore>${it.keystore.file}</keystore>
                </configuration>
              </execution>
              <execution>
                <phase>generate-resources</phase>
                <id>genkey</id>
                <goals>
                  <goal>generateKeyPair</goal>
                </goals>
                <configuration>
                  <keystore>${it.keystore.file}</keystore>
                  <dname>cn=${it.host}, ou=None, L=Test, ST=Test, o=Test, c=TE</dname>
                  <storepass>${it.keystore.pass}</storepass>
                  <alias>${it.keystore.alias}</alias>
                  <keyalg>RSA</keyalg>
                  <keysize>2048</keysize>
                </configuration>
              </execution>
              <execution>
                <phase>generate-resources</phase>
                <id>exportkey</id>
                <goals>
                  <goal>exportCertificate</goal>
                </goals>
                <configuration>
                  <keystore>${it.keystore.file}</keystore>
                  <alias>${it.keystore.alias}</alias>
                  <file>${project.build.directory}/pyrit.crt</file>
                  <storepass>${it.keystore.pass}</storepass>
                </configuration>
              </execution>
              <execution>
                <phase>generate-resources</phase>
                <id>importkey</id>
                <goals>
                  <goal>importCertificate</goal>
                </goals>
                <configuration>
                  <keystore>${it.keystore.file}</keystore>
                  <alias>root</alias>
                  <file>${project.build.directory}/pyrit.crt</file>
                  <storepass>${it.keystore.pass}</storepass>
                  <noprompt>true</noprompt>
                  <trustcacerts>true</trustcacerts>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.4.12</version>
            <configuration>
              <container>
                <containerId>wildfly8x</containerId>
                <log>${project.basedir}/target/cargo.log</log>
                <output>${project.basedir}/target/jboss.log</output>
                <zipUrlInstaller>
                  <url>http://download.jboss.org/wildfly/8.1.0.Final/wildfly-8.1.0.Final.zip</url>
                  <downloadDir>${project.basedir}/.cargo/downloads</downloadDir>
                  <extractDir>${project.basedir}/.cargo/extracts</extractDir>
                </zipUrlInstaller>
                <dependencies>
                  <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                  </dependency>
                </dependencies>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>${it.port.http}</cargo.servlet.port>
                  <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                  <cargo.jvmargs>-Xms64m -Xmx1152m -XX:MaxPermSize=512m</cargo.jvmargs>
                  <cargo.datasource.datasource.pyrit>
                    cargo.datasource.driver=${it.jdbc.driver}|
                    cargo.datasource.url=${it.jdbc.url}|
                    cargo.datasource.jndi=${it.jdbc.jndi}|
                    cargo.datasource.username=${it.jdbc.username}|
                    cargo.datasource.password=${it.jdbc.password}|
                    cargo.datasource.transactionsupport=LOCAL_TRANSACTION
                  </cargo.datasource.datasource.pyrit>
                </properties>
              </configuration>
            </configuration>
            <executions>
              <execution>
                <id>start-cargo</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
                <configuration>
                  <deployables>
                    <deployable>
                      <groupId>${project.groupId}</groupId>
                      <artifactId>muikku</artifactId>
                      <type>war</type>
                      <properties>
                        <context></context>
                      </properties>
                    </deployable>
                  </deployables>
                </configuration>
              </execution>
              <execution>
                <id>stop-cargo</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.wildfly.plugins</groupId>
            <artifactId>wildfly-maven-plugin</artifactId>
            <version>1.0.1.Final</version>
            <executions>
              <execution>
                <id>configure-wildfly</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <execute-commands>
                    <batch>true</batch>
                    <commands>
                      <!-- <command>/system-property=muikku-data:add(value="${project.build.directory}/../../muikku-data/muikku-data.xml,${project.build.directory}/../../muikku-data/muikku-data-private.xml")</command> -->
<!--                       <command>/system-property=muikku-data:add(value="${project.build.directory}/../src/test/resources/muikku-data/muikku-data.xml")</command> -->
                      <command>/system-property=jsf.project.stage:add(value="Production")</command>
                      <command>/core-service=management/security-realm=ssl-realm:add()</command>
                      <command>/core-service=management/security-realm=ssl-realm/server-identity=ssl:add(keystore-path="${it.keystore.file}",keystore-password="${it.keystore.pass}",alias="${it.keystore.alias}")</command>
                      <command>/subsystem=undertow/server=default-server/host=muikku:add()</command>
                      <command>/subsystem=undertow/server=default-server/https-listener=https:add(socket-binding="https",security-realm="ssl-realm")</command>
                      <command>/subsystem=undertow/server=default-server/host=muikku:write-attribute(name=alias,value=["dev.muikku.fi"])</command>
                      <command>/subsystem=undertow/server=default-server/host=muikku:write-attribute(name=default-web-module,value=ROOT.war)</command>
                    </commands>
                  </execute-commands>
                </configuration>
              </execution>
              <execution>
                <id>reload-wildfly</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>execute-commands</goal>
                </goals>
                <configuration>
                  <execute-commands>
                    <commands>
                      <command>:reload</command>
                    </commands>
                  </execute-commands>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>wait-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>wait-rest</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>wait</goal>
                </goals>
                <configuration>
                  <protocol>http</protocol>
                  <host>${it.host}</host>
                  <port>${it.port.http}</port>
                  <file>/</file>
                  <maxcount>10</maxcount>
                  <timeout>10000</timeout>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
