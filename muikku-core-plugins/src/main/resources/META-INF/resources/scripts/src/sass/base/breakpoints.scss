$breakpoint-small-mobile: (false, 320);
$breakpoint-medium-mobile: (320, 450);
$breakpoint-portrait-pad: (450, 768);
$breakpoint-landscape-pad: (768, 1024);
$breakpoint-medium-screen: (1024, 1199);
$breakpoint-wide-screen: (1199, false);

// Based on min-width (mobile-first) so these breakpoints fires when resolution exceeds given value.
// Em values are calculated as 1em = 16px by default. If user has increased browser's font size 
// break points will scale properly (threshold to fire break point increases as well) without breaking the
// amazing and magnificent layout :)

// eq. 640px and up - large mobile screens and for mobiles in landscape mode that exceeds 40em/640px width
$breakpoint-mobile-xl: 40em; 

// eq. 768px and up - portraid mode for pads and for few oddities of mobile devices in landscape mode that exceeds 48em/768px width
$breakpoint-pad: 48em; 

// eq. 1024px and up - normal desktop and landscape mode for pads that exceeds 64em/1024px width
$breakpoint-desktop: 64em; 

// eq. 1200px and up - wide desktops that exceeds 75em/1200px width
$breakpoint-desktop-xl: 75em; 

$breakpoint-max-usable-screen: 80em;

@mixin breakpoint-only($breakpoint) {
  @if (nth($breakpoint, 1) == false){
    @media screen and (max-width: #{nth($breakpoint, 2)}px) {
      @content;
    }
  } @else if (nth($breakpoint, 2) == false) {
    @media screen and (min-width: #{nth($breakpoint, 1) + 1}px) {
      @content;
    }
  } @else {
    @media screen and (min-width: #{nth($breakpoint, 1) + 1}px) and (max-width: #{nth($breakpoint, 2)}px) {
      @content;
    }
  }
}

@mixin breakpoint-down($breakpoint){
  @if (nth($breakpoint, 2) == false){
    @content;
  } @else {
    @media screen and (max-width: #{nth($breakpoint, 2)}px) {
      @content;
    }
  }
}

@mixin breakpoint-up($breakpoint){
  @if (nth($breakpoint, 1) == false){
    @content;
  } @else {
    @media screen and (min-width: #{nth($breakpoint, 1) + 1}px) {
      @content;
    }
  }
}

@mixin breakpoint($breakpoint){
  @media screen and (min-width: $breakpoint) {
    @content;
  }
}